{"name":"Practical-machine-learning-project","tagline":"This is a submission of project for Practical Machine Learning","body":"# **Practical Machine Learning Course - Project**\r\n## **Manjula Sridhar**\r\n## **27th September, 2015**\r\nScripts have been produced and tested on RStudio Version 3.2.1 and Windows 7.\r\n### Background\r\nUsing devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement - a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways. More information is available from the website here: http://groupware.les.inf.puc-rio.br/har (see the section on the Weight Lifting Exercise Dataset).\r\n### Data\r\nThe training data for this project are available here: [https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv]\r\nThe test data are available here: [https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv]\r\nThe data for this project come from this source: [http://groupware.les.inf.puc-rio.br/har]. If you use the document you create for this class for any purpose please cite them as they have been very generous in allowing their data to be used for this kind of assignment.\r\n### Preliminary Work\r\n### Initial steps\r\nInitially, seed was set at 687 randomly. \r\nPackages such as caret and randomForest, rpart and rpart.plot were downloaded and installed,. \r\n### Procedure for model\r\nOur outcome variable is classe, a factor variable with 5 levels:\r\n1.Class A - exactly according to the specification\r\n2.Class B - throwing the elbows to the front\r\n3.Class C - lifting the dumbbell only halfway\r\n4.Class D - lowering the dumbbell only halfway\r\n5.Class E - throwing the hips to the front\r\nPrediction evaluations is based on maximizing the accuracy and minimizing the out-of-sample error. All other available variables after cleaning is used for prediction.\r\nTwo models are tested using decision tree and random forest algorithms. The model with the highest accuracy is chosen as our final model.\r\nCross-validation\r\nCross-validation is performed by subsampling our training data set randomly without replacement into 2 subsamples: \r\nsampletrain data (75% of the original Training data set) and \r\nsampletest data (25%). \r\n### Procedure\r\nFeatures with missing values are discarded as they are irrelevant. All other features will be kept as relevant variables.\r\nAlgorithms used: Decision tree and random forest algorithms \r\n### Code and Results\r\n#install and load required libraries\r\nlibrary(caret)\r\nlibrary(randomForest) \r\nlibrary(rpart) \r\nlibrary(rpart.plot)\r\n\r\n#set seed\r\nset.seed(687)\r\n# Loading the training data set into my R session replacing all missing with \"NA\"\r\ntrain <- read.csv(\"C:/Users/Administrator/Desktop/pml-training.csv\", na.strings=c(\"NA\",\"#DIV/0!\", \"\"))\r\n\r\n# Loading the testing data set \r\ntest <- read.csv('C:/Users/Administrator/Desktop/pml-testing.csv', na.strings=c(\"NA\",\"#DIV/0!\", \"\"))\r\n\r\n# Delete columns with all missing values\r\ntrain<-train[,colSums(is.na(train)) == 0]\r\ntest <-test[,colSums(is.na(test)) == 0]\r\n\r\n# remove unnecessary variables like user_name, raw_timestamp_part_1, raw_timestamp_part_,2 cvtd_timestamp, new_window, and  num_window \r\ntrain   <-train[,-c(1:7)]\r\ntest <-test[,-c(1:7)]\r\n\r\nsubsamples <- createDataPartition(y=train$classe, p=0.75, list=FALSE)\r\nsampletrain<- train[subsamples, ] \r\nsampletest <- train[-subsamples, ]\r\n\r\nplot(sampletrain$classe, col=\"green\", main=\"Bar Plot of levels of the variable classe of dataset\", xlab=\"classe levels\", ylab=\"Frequency\")\r\n\r\n\r\nsolution1 <- rpart(classe ~ ., data=subTraining, method=\"class\")\r\n\r\n# Predicting:\r\npred1 <- predict(solution1, sampletest, type = \"class\")\r\n\r\n# Plot of the Decision Tree\r\nrpart.plot(solution1, main=\"Classification Tree\", extra=102, under=TRUE, faclen=0)\r\n\r\n# Test results on our sampletest data set:\r\nconfusionMatrix(pred1, sampletest$classe)\r\n\r\n#Solution in random forest\r\nsolution2 <- randomForest(classe ~. , data=subTraining, method=\"class\")\r\n\r\n# Predicting:\r\npred2 <- predict(solution2, sampletest, type = \"class\")\r\n\r\n# Test results on sampletest data set:\r\nconfusionMatrix(pred2, sampletest$classe)\r\n\r\n# predict outcome levels on the original Testing data set using Random Forest algorithm\r\nfinal<- predict(solution2, test, type=\"class\")\r\nfinal\r\n\r\n\r\n# Write files\r\nfile_write = function(x){\r\n  n = length(x)\r\n  for(i in 1:n){\r\n    filename = paste0(\"problem_id_\",i,\".txt\")\r\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\r\n  }\r\n}\r\n\r\nfile_write(final)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}